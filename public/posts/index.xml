<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on Drafting Strategy</title>
    <link>http://localhost:57124/posts/</link>
    <description>Recent content in Posts on Drafting Strategy</description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <copyright>Will Larson</copyright>
    <lastBuildDate>Thu, 06 Mar 2025 04:00:00 -0700</lastBuildDate>
    <atom:link href="http://localhost:57124/posts/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Who gets to do strategy?</title>
      <link>http://localhost:57124/who-gets-to-do-strategy/</link>
      <pubDate>Thu, 06 Mar 2025 04:00:00 -0700</pubDate>
      <guid>http://localhost:57124/who-gets-to-do-strategy/</guid>
      <description>If you talk to enough aspiring leaders, you&amp;rsquo;ll become familiar with the prevalent idea that they need to be promoted before they can work on strategy. It&amp;rsquo;s a truism, but I&amp;rsquo;ve also found this idea perfectly wrong: you can work on strategy from anywhere in an organization, it just requires different tactics to do so.&#xA;Both Staff Engineer and The Engineering Executive&amp;rsquo;s Primer have chapters on strategy. While the chapters&amp;rsquo; contents are quite different, both present a practical path to advancing your organization&amp;rsquo;s thinking about complex topics.</description>
    </item>
    <item>
      <title>Who gets to do strategy?</title>
      <link>http://localhost:57124/who-gets-to-do-strategy/</link>
      <pubDate>Thu, 06 Mar 2025 04:00:00 -0700</pubDate>
      <guid>http://localhost:57124/who-gets-to-do-strategy/</guid>
      <description>If you talk to enough aspiring leaders, you&amp;rsquo;ll become familiar with the prevalent idea that they need to be promoted before they can work on strategy. It&amp;rsquo;s a truism, but I&amp;rsquo;ve also found this idea perfectly wrong: you can work on strategy from anywhere in an organization, it just requires different tactics to do so.&#xA;Both Staff Engineer and The Engineering Executive&amp;rsquo;s Primer have chapters on strategy. While the chapters&amp;rsquo; contents are quite different, both present a practical path to advancing your organization&amp;rsquo;s thinking about complex topics.</description>
    </item>
    <item>
      <title>When to write strategy, and how much?</title>
      <link>http://localhost:57124/when-write-down-engineering-strategy/</link>
      <pubDate>Sun, 25 Aug 2024 04:00:00 -0700</pubDate>
      <guid>http://localhost:57124/when-write-down-engineering-strategy/</guid>
      <description>Even if you believe that strategy is generally useful, it is difficult to decide that today&amp;rsquo;s the day to start writing engineering strategy. When you do start writing strategy, it&amp;rsquo;s easy write so much strategy that your organization is overwhelmed and ignores your strategy rather than investing time into understanding it.&#xA;Fortunately, these are universal problems, and there are a handful of useful mental models to avoid both extremes. This chapter covers:</description>
    </item>
    <item>
      <title>When to write strategy, and how much?</title>
      <link>http://localhost:57124/when-write-down-engineering-strategy/</link>
      <pubDate>Sun, 25 Aug 2024 04:00:00 -0700</pubDate>
      <guid>http://localhost:57124/when-write-down-engineering-strategy/</guid>
      <description>Even if you believe that strategy is generally useful, it is difficult to decide that today&amp;rsquo;s the day to start writing engineering strategy. When you do start writing strategy, it&amp;rsquo;s easy write so much strategy that your organization is overwhelmed and ignores your strategy rather than investing time into understanding it.&#xA;Fortunately, these are universal problems, and there are a handful of useful mental models to avoid both extremes. This chapter covers:</description>
    </item>
    <item>
      <title>How to integrate Stripe&#39;s acquisition of Index? (2018)</title>
      <link>http://localhost:57124/pos-acquisition-integration/</link>
      <pubDate>Thu, 27 Feb 2025 06:00:00 -0700</pubDate>
      <guid>http://localhost:57124/pos-acquisition-integration/</guid>
      <description>While discussions around acquisitions often focus on technical diligence and deciding whether to make the acquisition, the integration that follows afterwards can be even more complex. There are few irreversible trapdoor decisions in engineering, but decisions made early in an integration tend to be surprisingly durable.&#xA;This engineering strategy explores Stripe&amp;rsquo;s approach to integrating their 2018 acquisition of Index. While a business book would focus on the rationale for the acquisition itself, here that rationale is merely part of the diagnosis that defines the integration tradeoffs.</description>
    </item>
    <item>
      <title>Diagnosis in engineering strategy.</title>
      <link>http://localhost:57124/diagnosis-for-strategy/</link>
      <pubDate>Sat, 22 Feb 2025 04:00:00 -0700</pubDate>
      <guid>http://localhost:57124/diagnosis-for-strategy/</guid>
      <description>Once you&amp;rsquo;ve written your strategy&amp;rsquo;s exploration, the next step is working on its diagnosis. Diagnosis is understanding the constraints and challenges your strategy needs to address. In particular, it&amp;rsquo;s about doing that understanding while slowing yourself down from deciding how to solve the problem at hand before you know the problem&amp;rsquo;s nuances and constraints.&#xA;If you ever find yourself wanting to skip the diagnosis phase&amp;ndash;let&amp;rsquo;s get to the solution already!&amp;ndash;then maybe it&amp;rsquo;s worth acknowledging that every strategy that I&amp;rsquo;ve seen fail, did so due to a lazy or inaccurate diagnosis.</description>
    </item>
    <item>
      <title>Exploring for strategy.</title>
      <link>http://localhost:57124/exploring-for-strategy/</link>
      <pubDate>Thu, 13 Feb 2025 04:00:00 -0700</pubDate>
      <guid>http://localhost:57124/exploring-for-strategy/</guid>
      <description>A surprising number of strategies are doomed from inception because their authors get attached to one particular approach without considering alternatives that would work better for their current circumstances. This happens when engineers want to pick tools solely because they are trending, and when executives insist on adopting the tech stack from their prior organization where they felt comfortable.&#xA;Exploration is the antidote to early anchoring, forcing you to consider the problem widely before evaluating any of the paths forward.</description>
    </item>
    <item>
      <title>How should we control access to user data?</title>
      <link>http://localhost:57124/user-data-access-strategy/</link>
      <pubDate>Fri, 07 Feb 2025 06:00:00 -0700</pubDate>
      <guid>http://localhost:57124/user-data-access-strategy/</guid>
      <description>At some point in a startup&amp;rsquo;s lifecycle, they decide that they need to be ready to go public in 18 months, and a flurry of IPO-readiness activity kicks off. This strategy focuses on a company working on IPO readiness, which has identified a gap in their internal controls for managing access to their users&amp;rsquo; data. It&amp;rsquo;s a company that wants to meaningfully improve their security posture around user data access, but which has had a number of failed security initiatives over the years.</description>
    </item>
    <item>
      <title>Is engineering strategy useful?</title>
      <link>http://localhost:57124/is-engineering-strategy-useful/</link>
      <pubDate>Thu, 30 Jan 2025 04:00:00 -0700</pubDate>
      <guid>http://localhost:57124/is-engineering-strategy-useful/</guid>
      <description>While I frequently hear engineers bemoan a missing strategy, they rarely complete the thought by articulating why the missing strategy matters. Instead, it serves as more of a truism: the economy used to be better, children used to respect their parents, and engineering organizations used to have an engineering strategy.&#xA;This chapter starts by exploring something I believe quite strongly: there&amp;rsquo;s always an engineering strategy, even if there&amp;rsquo;s nothing written down.</description>
    </item>
    <item>
      <title>&#34;We&#39;re a product engineering company!&#34; -- Engineering strategy at Calm.</title>
      <link>http://localhost:57124/calm-product-eng-company/</link>
      <pubDate>Thu, 23 Jan 2025 06:00:00 -0700</pubDate>
      <guid>http://localhost:57124/calm-product-eng-company/</guid>
      <description>In my career, the majority of the strategy work I&amp;rsquo;ve done has been in non-executive roles, things like Uber&amp;rsquo;s service migration. Joining Calm was my first executive role, where I was able to not just propose, but also mandate, strategy.&#xA;Like almost all startups, the engineering team was scattered when I joined. Was our most important work creating more scalable infrastructure? Was our greatest risk the failure to adopt leading programming languages?</description>
    </item>
    <item>
      <title>Bridging theory and practice in engineering strategy.</title>
      <link>http://localhost:57124/bridging-eng-strategy-theory-and-practice/</link>
      <pubDate>Thu, 16 Jan 2025 04:00:00 -0700</pubDate>
      <guid>http://localhost:57124/bridging-eng-strategy-theory-and-practice/</guid>
      <description>Some people I&amp;rsquo;ve worked with have lost hope that engineering strategy actually exists within any engineering organizations. I imagine that they, reading through the steps to build engineering strategy, or the strategy for navigating private equity ownership, are not impressed. Instead, these ideas probably come across as theoretical at best. In less polite company, they might describe these ideas as fake constructs.&#xA;Let&amp;rsquo;s talk about it! Because they&amp;rsquo;re right. In fact, they&amp;rsquo;re right in two different ways.</description>
    </item>
    <item>
      <title>Uber&#39;s service migration strategy circa 2014.</title>
      <link>http://localhost:57124/uber-service-migration-strategy/</link>
      <pubDate>Thu, 09 Jan 2025 06:00:00 -0700</pubDate>
      <guid>http://localhost:57124/uber-service-migration-strategy/</guid>
      <description>In early 2014, I joined as an engineering manager for Uber&amp;rsquo;s Infrastructure team. We were responsible for a wide number of things, including provisioning new services. While the overall team I led grew significantly over time, the subset working on service provisioning never grew beyond four engineers.&#xA;Those four engineers successfully migrated 1,000+ services onto a new, future-proofed service platform. More importantly, they did it while absorbing the majority, although certainly not the entirety, of the migration workload onto that small team rather than spreading it across the 2,000+ engineers working at Uber at the time.</description>
    </item>
    <item>
      <title>Service onboarding model for Uber (2014).</title>
      <link>http://localhost:57124/uber-service-onboarding-model/</link>
      <pubDate>Thu, 09 Jan 2025 05:00:00 -0700</pubDate>
      <guid>http://localhost:57124/uber-service-onboarding-model/</guid>
      <description>At the core of Uber&amp;rsquo;s service migration strategy (2014) is understanding the service onboarding process, and identifying the levers to speed up that process. Here we&amp;rsquo;ll develop a system model representing that onboarding process, and exercise the model to test a number of hypotheses about how to best speed up provisioning.&#xA;In this chapter, we&amp;rsquo;ll cover:&#xA;Where the model of service onboarding suggested we focus on efforts Developing a system model using the lethain/systems package on Github.</description>
    </item>
    <item>
      <title>Refining strategy with Wardley Mapping.</title>
      <link>http://localhost:57124/wardley-mapping/</link>
      <pubDate>Thu, 02 Jan 2025 06:00:00 -0700</pubDate>
      <guid>http://localhost:57124/wardley-mapping/</guid>
      <description>The first time I heard about Wardley Mapping was from Charity Majors discussing it on Twitter. Of the three core strategy refinement techniques, this is the technique that I&amp;rsquo;ve personally used the least. Despite that, I decided to include it in this book because it highlights how many different techniques can be used for refining strategy, and also because it&amp;rsquo;s particularly effective at looking at the broadest ecosystems your organization exists in.</description>
    </item>
    <item>
      <title>How to effectively refine engineering strategy.</title>
      <link>http://localhost:57124/refining-eng-strategy/</link>
      <pubDate>Sat, 28 Dec 2024 04:00:00 -0700</pubDate>
      <guid>http://localhost:57124/refining-eng-strategy/</guid>
      <description>In Jim Collins&amp;rsquo; Great by Choice, he develops the concept of Fire Bullets, Then Cannonballs. His premise is that you should cheaply test new ideas before fully committing to them. Your organization can only afford firing a small number of cannonballs, but it can bankroll far more bullets. Why not use bullets to derisk your cannonballs&amp;rsquo; trajectories?&#xA;This chapter presents a series of concrete techniques that I have personally used to effectively refine strategies before reaching the cannonball stage.</description>
    </item>
    <item>
      <title>Wardley mapping the LLM ecosystem.</title>
      <link>http://localhost:57124/wardley-llm-ecosystem/</link>
      <pubDate>Tue, 24 Dec 2024 04:00:00 -0700</pubDate>
      <guid>http://localhost:57124/wardley-llm-ecosystem/</guid>
      <description>In How should you adopt LLMs?, we explore how a theoretical ride sharing company, Theoretical Ride Sharing, should adopt Large Language Models (LLMs). Part of that strategy&amp;rsquo;s diagnosis depends on understanding the expected evolution of the LLM ecosystem, which we&amp;rsquo;ve build a Wardley map to better explore.&#xA;This map of the LLM space is interested in how product companies should address the proliferation of model providers such as Anthropic, Google and OpenAI, as well as the proliferation of LLM product patterns like agentic workflows, Retrieval Augmented Generation (RAG), and running evals to maintain performance as models change.</description>
    </item>
    <item>
      <title>Navigating Private Equity ownership.</title>
      <link>http://localhost:57124/private-equity-strategy/</link>
      <pubDate>Mon, 11 Nov 2024 06:00:00 -0700</pubDate>
      <guid>http://localhost:57124/private-equity-strategy/</guid>
      <description>In 2020, you could credibly argue that ZIRP explains the world, but that&amp;rsquo;s an impossible argument to make in 2024 when zero-interest rate policy is only a fond memory. Instead, we&amp;rsquo;re seeing a number of companies designed for rapid expansion learning to adapt to a world that expects immediate free cash flow rather than accepting the sweet promise of discounted future cash flow.&#xA;This chapter wants to tackle that problem head-on, taking the role of an engineering organization attempting to navigate new ownership by a private equity group.</description>
    </item>
    <item>
      <title>Using systems modeling to refine strategy.</title>
      <link>http://localhost:57124/strategy-systems-modeling/</link>
      <pubDate>Mon, 04 Nov 2024 07:00:00 -0700</pubDate>
      <guid>http://localhost:57124/strategy-systems-modeling/</guid>
      <description>While I was probably late to learn the concept of strategy testing, I might have learned about systems modeling too early in my career, stumbling on Donella Meadows&amp;rsquo; Thinking in Systems: A Primer before I began my career in software. Over the years, I&amp;rsquo;ve discovered a number of ways to miuse systems modeling, but it remains the most effective, flexible tool I&amp;rsquo;ve found to debugging complex problems.&#xA;In this chapter, we&amp;rsquo;ll work through:</description>
    </item>
    <item>
      <title>Eng org seniority-mix model.</title>
      <link>http://localhost:57124/engineering-cost-model/</link>
      <pubDate>Sun, 27 Oct 2024 04:00:00 -0700</pubDate>
      <guid>http://localhost:57124/engineering-cost-model/</guid>
      <description>One of the trademarks of private equity ownership is the expectation that either the company maintains their current margin and grows revenue at 25-30%, or they instead grow slower and increase their free cash flow year over year. In many organizations, engineering costs have a major impact on their free cash flow. There are many costs to reduce, cloud hosting and such, but inevitably part of the discussion is addressing engineering headcount costs directly.</description>
    </item>
    <item>
      <title>Modeling driving onboarding.</title>
      <link>http://localhost:57124/driver-onboarding-model/</link>
      <pubDate>Sat, 19 Oct 2024 04:00:00 -0700</pubDate>
      <guid>http://localhost:57124/driver-onboarding-model/</guid>
      <description>The How should you adopt LLMs? strategy explores how Theoretical Ride Sharing might adopt LLMs. It builds on several models, the first is about LLMs impact on Developer Experience. The second model, documented here, looks at whether LLMs might improve a core product and business problem: maximizing active drivers on their ridesharing platform.&#xA;In this chapter, we&amp;rsquo;ll cover:&#xA;Where the model of ridesharing drivers identifies opportunities for LLMs How the model was sketched and developed using lethain/systems package on Github Exercising this model to learn from it Let&amp;rsquo;s get started.</description>
    </item>
    <item>
      <title>Modeling impact of LLMs on Developer Experience.</title>
      <link>http://localhost:57124/dx-llm-model/</link>
      <pubDate>Sun, 06 Oct 2024 04:00:00 -0700</pubDate>
      <guid>http://localhost:57124/dx-llm-model/</guid>
      <description>In How should you adopt Large Language Models? (LLMs), we considered how LLMs might impact a company&amp;rsquo;s developer experience. To support that exploration, I&amp;rsquo;ve developed a system model of the developing software at the company.&#xA;In this chapter, we&amp;rsquo;ll work through:&#xA;Summary results from this model How the model was developed, both sketching and building the model in a spreadsheet. (As discussed in the overview of systems modeling, I generally would recommend against using spreadsheets to develop most models, but it&amp;rsquo;s educational to attempt doing so once or twice.</description>
    </item>
    <item>
      <title>Strategy testing: avoid the waterfall strategy trap with iterative refinement.</title>
      <link>http://localhost:57124/testing-strategy-iterative-refinement/</link>
      <pubDate>Wed, 25 Sep 2024 17:00:00 -0700</pubDate>
      <guid>http://localhost:57124/testing-strategy-iterative-refinement/</guid>
      <description>If I could only popularize one idea about technical strategy, it would be that prematurely applying pressure to a strategy&amp;rsquo;s rollout prevents evaluating whether the strategy is effective. Pressure changes behavior in profound ways, and many of those changes are intended to make you believe your strategy is working while minimizing change to the status quo (if you&amp;rsquo;re an executive) or get your strategy repealed (if you&amp;rsquo;re not an executive). Neither is particular helpful.</description>
    </item>
    <item>
      <title>Should we decompose our monolith?</title>
      <link>http://localhost:57124/decompose-monolith-strategy/</link>
      <pubDate>Sun, 15 Sep 2024 06:00:00 -0700</pubDate>
      <guid>http://localhost:57124/decompose-monolith-strategy/</guid>
      <description>From their first introduction in 2005, the debate between adopting a microservices architecture, a monolithic service architecture, or a hybrid between the two, has become one of the least-reversible decisions that most engineering organizations make. Even migrating to a different database technology is generally a less expensive change than moving from monolith to microservices or from microservices to monolith.&#xA;The industry has in many ways gone full circle on that debate, from most hyperscalers in the 2010s partaking in a multi-year monolith to microservices migration, to Kelsey Hightower&amp;rsquo;s iconic tweet on the perils of distributed monoliths:</description>
    </item>
    <item>
      <title>Making engineering strategies more readable</title>
      <link>http://localhost:57124/readable-engineering-strategy-documents/</link>
      <pubDate>Sat, 18 May 2024 04:00:00 -0700</pubDate>
      <guid>http://localhost:57124/readable-engineering-strategy-documents/</guid>
      <description>As discussed in Components of engineering strategy, a complete engineering strategy has five components: explore, diagnose, refine (map &amp;amp; model), policy, and operation. However, it&amp;rsquo;s actually quite challenging to read a strategy document written that way. That&amp;rsquo;s an effective sequence for creating a strategy, but it&amp;rsquo;s a challenging sequence for those trying to quickly read and apply a strategy without necessarily wanting to understand the complete thinking behind each decision.</description>
    </item>
    <item>
      <title>How should you adopt LLMs?</title>
      <link>http://localhost:57124/llm-adoption-strategy/</link>
      <pubDate>Tue, 14 May 2024 06:00:00 -0700</pubDate>
      <guid>http://localhost:57124/llm-adoption-strategy/</guid>
      <description>Whether you’re a product engineer, a product manager, or an engineering executive, you’ve probably been pushed to consider using Large Language Models (LLM) to extend your product or enhance your processes. 2023-2024 is an interesting era for LLM adoption, where these capabilities have transitioned into the mainstream, with many companies worrying that they’re falling behind despite the fact that most integrations appear superficial.&#xA;That context makes LLM adoption a great topic for a strategy case study.</description>
    </item>
  </channel>
</rss>
